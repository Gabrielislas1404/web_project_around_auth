{"ast":null,"code":"class Api {\n  constructor(baseUrl, headers, token) {\n    this.baseUrl = baseUrl;\n    this.headers = headers;\n    this._token = token;\n  }\n  getInitialCards() {\n    return fetch(`${this.baseUrl}/cards`, {\n      headers: {\n        ...this.headers,\n        Authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (!res.ok) throw new Error(`Server error: ${res.status}`);\n      return res.json();\n    }).catch(error => console.error('Error', error));\n  }\n  getUserInfo() {\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: {\n        ...this.headers,\n        Authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (!res.ok) throw new Error(`Server error: ${res.status}`);\n      return res.json();\n    }).catch(error => console.error('Error', error));\n  }\n  updateUser({\n    name,\n    about\n  }) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: {\n        ...this.headers,\n        Authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      method: 'PATCH',\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(res => {\n      if (!res.ok) throw new Error(`Error en servidor: ${res.status}`);\n      return res.json();\n    }).catch(error => console.error('Error', error));\n  }\n  updateAvatar({\n    avatar\n  }) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      headers: {\n        ...this.headers,\n        Authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      method: 'PATCH',\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(res => {\n      if (!res.ok) throw new Error(`Error en servidor: ${res.status}`);\n      return res.json();\n    }).catch(error => console.error('Error', error));\n  }\n  addCard({\n    name,\n    link\n  }) {\n    return fetch(`${this.baseUrl}/cards`, {\n      headers: {\n        ...this.headers,\n        Authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(res => {\n      if (!res.ok) throw new Error(`Error en servidor: ${res.status}`);\n      return res.json();\n    }).catch(error => console.error('Error', error));\n  }\n  deleteCard(idCard) {\n    return fetch(`${this.baseUrl}/cards/${idCard}`, {\n      headers: {\n        ...this.headers,\n        Authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      method: 'DELETE',\n      body: JSON.stringify({\n        idCard\n      })\n    }).then(res => {\n      if (!res.ok) throw new Error(`Error en servidor: ${res.status}`);\n      return res.json();\n    }).catch(error => console.error('Error', error));\n  }\n  likeCard({\n    id,\n    isLiked\n  }) {\n    const method = isLiked ? 'PUT' : 'DELETE';\n    return fetch(`${this.baseUrl}/cards/likes/${id}`, {\n      headers: {\n        ...this.headers,\n        Authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      method: method,\n      body: JSON.stringify({\n        id\n      })\n    }).then(res => {\n      if (!res.ok) throw new Error(`Error en servidor: ${res.status}`);\n      return res.json();\n    }).catch(error => console.error('Error', error));\n  }\n  unlikeCard(id) {\n    return fetch(`${this.baseUrl}/cards/likes/${id}`, {\n      headers: {\n        ...this.headers,\n        Authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      method: 'DELETE',\n      body: JSON.stringify({\n        id\n      })\n    }).then(res => {\n      if (!res.ok) throw new Error(`Error en servidor: ${res.status}`);\n      return res.json();\n    }).catch(error => console.error('Error', error));\n  }\n}\nconst api = new Api('https://around.nomoreparties.co/v1/web_es_12', {\n  authorization: 'fa25d0a0-1783-4d33-9dd9-ca8f33a53e6d',\n  'Content-Type': 'application/json'\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","baseUrl","headers","token","_token","getInitialCards","fetch","Authorization","then","res","ok","Error","status","json","catch","error","console","getUserInfo","updateUser","name","about","method","body","JSON","stringify","updateAvatar","avatar","addCard","link","deleteCard","idCard","likeCard","id","isLiked","unlikeCard","api","authorization"],"sources":["/Users/gabriel/Documents/Proyectos-TripleTen/Proyecto6/web_project_around_auth/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor(baseUrl, headers, token) {\n    this.baseUrl = baseUrl;\n    this.headers = headers;\n    this._token = token;\n  }\n  getInitialCards() {\n    return fetch(`${this.baseUrl}/cards`, {\n      headers: {\n        ...this.headers,\n        Authorization: this._token,\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => {\n        if (!res.ok) throw new Error(`Server error: ${res.status}`);\n        return res.json();\n      })\n      .catch((error) => console.error('Error', error));\n  }\n\n  getUserInfo() {\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: {\n        ...this.headers,\n        Authorization: this._token,\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => {\n        if (!res.ok) throw new Error(`Server error: ${res.status}`);\n        return res.json();\n      })\n      .catch((error) => console.error('Error', error));\n  }\n  updateUser({ name, about }) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: {\n        ...this.headers,\n        Authorization: this._token,\n        'Content-Type': 'application/json',\n      },\n      method: 'PATCH',\n      body: JSON.stringify({\n        name,\n        about,\n      }),\n    })\n      .then((res) => {\n        if (!res.ok) throw new Error(`Error en servidor: ${res.status}`);\n        return res.json();\n      })\n      .catch((error) => console.error('Error', error));\n  }\n\n  updateAvatar({ avatar }) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      headers: {\n        ...this.headers,\n        Authorization: this._token,\n        'Content-Type': 'application/json',\n      },\n      method: 'PATCH',\n      body: JSON.stringify({\n        avatar,\n      }),\n    })\n      .then((res) => {\n        if (!res.ok) throw new Error(`Error en servidor: ${res.status}`);\n        return res.json();\n      })\n      .catch((error) => console.error('Error', error));\n  }\n\n  addCard({ name, link }) {\n    return fetch(`${this.baseUrl}/cards`, {\n      headers: {\n        ...this.headers,\n        Authorization: this._token,\n        'Content-Type': 'application/json',\n      },\n      method: 'POST',\n      body: JSON.stringify({\n        name,\n        link,\n      }),\n    })\n      .then((res) => {\n        if (!res.ok) throw new Error(`Error en servidor: ${res.status}`);\n        return res.json();\n      })\n      .catch((error) => console.error('Error', error));\n  }\n\n  deleteCard(idCard) {\n    return fetch(`${this.baseUrl}/cards/${idCard}`, {\n      headers: {\n        ...this.headers,\n        Authorization: this._token,\n        'Content-Type': 'application/json',\n      },\n      method: 'DELETE',\n      body: JSON.stringify({\n        idCard,\n      }),\n    })\n      .then((res) => {\n        if (!res.ok) throw new Error(`Error en servidor: ${res.status}`);\n        return res.json();\n      })\n      .catch((error) => console.error('Error', error));\n  }\n\n  likeCard({ id, isLiked }) {\n    const method = isLiked ? 'PUT' : 'DELETE';\n    return fetch(`${this.baseUrl}/cards/likes/${id}`, {\n      headers: {\n        ...this.headers,\n        Authorization: this._token,\n        'Content-Type': 'application/json',\n      },\n      method: method,\n      body: JSON.stringify({\n        id,\n      }),\n    })\n      .then((res) => {\n        if (!res.ok) throw new Error(`Error en servidor: ${res.status}`);\n        return res.json();\n      })\n      .catch((error) => console.error('Error', error));\n  }\n\n  unlikeCard(id) {\n    return fetch(`${this.baseUrl}/cards/likes/${id}`, {\n      headers: {\n        ...this.headers,\n        Authorization: this._token,\n        'Content-Type': 'application/json',\n      },\n      method: 'DELETE',\n      body: JSON.stringify({\n        id,\n      }),\n    })\n      .then((res) => {\n        if (!res.ok) throw new Error(`Error en servidor: ${res.status}`);\n        return res.json();\n      })\n      .catch((error) => console.error('Error', error));\n  }\n}\n\nconst api = new Api('https://around.nomoreparties.co/v1/web_es_12', {\n  authorization: 'fa25d0a0-1783-4d33-9dd9-ca8f33a53e6d',\n  'Content-Type': 'application/json',\n});\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}